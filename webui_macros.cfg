[include macros/mcu_flasher.cfg]
[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 200.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 295.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[firmware_retraction]
retract_length: 1.2
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 30
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 20
#   The speed of unretraction, in mm/s. The default is 10 mm/s.
[gcode_macro PRINT_START10]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
  G32 
    BED_MESH_PROFILE LOAD="default"
    G1 X50 Y5 F2000 ; move to prime
    G92 E0 ; reset extrusion distance
    G1 Z0.7 F2000 ; get ready to prime
    G1 X150 E10 F1000 ; Unretract and wipe
    G1 X250 E32 F2000 ; prime nozzle
    G1 X300  F3000 ; quick wipe   
[gcode_macro PRINT_START8]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
  G32 
    BED_MESH_PROFILE LOAD="default"
    G1 X50 Y15 F2000 ; move to prime
    G92 E0 ; reset extrusion distance
    G1 Z0.6 F2000 ; get ready to prime
    G1 X150 E8 F1000 ; Unretract and wipe
    G1 X250 E30 F2000 ; prime nozzle
    G1 X300  F3000 ; quick wipe   
[gcode_macro PRINT_START6]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G1 X50 Y15 F2000 ; move to prime
    G92 E0 ; reset extrusion distance
    G1 Z0.4 F2000 ; get ready to prime
    G1 X150 E8 F1000 ; Unretract and wipe
    G1 X250 E28 F2000 ; prime nozzle
    G1 X300  F3000 ; quick wipe   
[gcode_macro PRINT_START4]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
  G32 
    BED_MESH_PROFILE LOAD="default"
       
   
    G1 X100 Y15 F4000 ; move to prime
    G92 E0 ; reset extrusion distance
    G1 Z0.3 F2000 ; get ready to prime
    G1 X150 E8 F1000 ; Unretract and wipe
    G1 X250 E16 F2000 ; prime nozzle
    G1 X300  F3000 ; quick wipe

[gcode_macro PRINT_START2]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
  G32 
    BED_MESH_PROFILE LOAD="default"  
    G1 X100 Y5 F4000 ; move to prime
    G92 E0 ; reset extrusion distance
    G1 Z0.16 F2000 ; get ready to prime
    G1 X150 E4 F1000 ; Unretract and wipe
    G1 X250 E8 F2000 ; prime nozzle
    G1 X300  F3000 ; quick wipe
    
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X5.0 Y5.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z25 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X0 Y0 F3600       ; park nozzle at center rear
    


    
## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"


[gcode_macro UNLOAD_FILAMENT]
gcode:
    M83
    G1 E10 F300
    G1 E-100 F1800
    G1 E-100 F1800
    G1 E-100 F1800
    G1 E-100 F1800
    G1 E-100 F1800
    G1 E-100 F1800
    G1 E-100 F1800
    G1 E-100 F1800
    G1 E-100 F1800
    G1 E-100 F1800
    G1 E-100 F1800
    G1 E-100 F1800
    G1 E-100 F1800
    G1 E-100 F1800
    G1 E-100 F1800

    M82

[gcode_macro LOAD_FILAMENT]
gcode:
    M83
    G1 E100 F1800
    G1 E100 F1800
    G1 E100 F1800
    G1 E100 F1800
    G1 E100 F1800
    G1 E100 F1800
    G1 E100 F1800
    G1 E100 F1800
    G1 E100 F1800
    G1 E100 F1800
    G1 E100 F1800
    G1 E100 F1800
    G1 E30 F300
    G1 E15 F150
    G1 E-3
    M82

[idle_timeout]
gcode:
    SET_PIN PIN=light VALUE=0
    TURN_OFF_HEATERS
timeout: 3600
[gcode_macro LIGHTS_OFF]
gcode:    
    SET_PIN PIN=ledblue VALUE=0.0
    SET_PIN PIN=ledgreen VALUE=0.0
    SET_PIN PIN=ledred VALUE=0.0
    
[gcode_macro LIGHTS_ON]
gcode:    
    SET_PIN PIN=ledblue VALUE=1.0
    SET_PIN PIN=ledgreen VALUE=1.0
    SET_PIN PIN=ledred VALUE=1.0 

                             
[gcode_macro TIMELAPSE_TAKE_FRAME]
gcode:
 {action_call_remote_method("timelapse_newframe")}

[gcode_macro TIMELAPSE_RENDER]
gcode:
 {action_call_remote_method("timelapse_render")}
                              
[gcode_macro G32]
gcode:
#    FORCE_MOVE STEPPER=stepper_z2 DISTANCE=2 VELOCITY=20
#    FORCE_MOVE STEPPER=stepper_z1 DISTANCE=2 VELOCITY=20
    {% if "xyz" in printer.toolhead.homed_axes %}
    BED_MESH_CLEAR
    QUAD_GANTRY_LEVEL
    G0 X200 Y200 Z20 F18000 
    {% else %}
    BED_MESH_CLEAR
    G28 
    QUAD_GANTRY_LEVEL
    G0 X200 Y200 Z20 F18000 
    {% endif %} 
[gcode_macro DUMP_VARIABLES]
gcode:
    {% set filter_name = params.NAME|default('')|string|lower %}
    {% set filter_value = params.VALUE|default('')|string|lower %}
    {% set show_cfg = params.SHOW_CFG|default(0)|int %}
    
    {% set out = [] %}

    {% for key1 in printer %}
        {% for key2 in printer[key1] %}
            {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
            {% endif %}
        {% else %}
            {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
            {% endif %}
        {% endfor %}
    {% endfor %}

[gcode_macro Z_OFFSET_APPLY_ENDSTOP]
rename_existing: Z_OFFSET_APPLY_ENDSTOP_NO_EUCLID
gcode:
    Z_OFFSET_APPLY_PROBE

[gcode_macro _SET_MPC_MATERIAL]
description: Set heater MPC parameters for a given material
variable_filament_table:
    ## Update this table to adjust material settings
    {
        ## ( density, heat capacity )  # suggested heat capacity range
        "PLA"       : ( 1.25, 2.20 ),  # 1.80 - 2.20
        "PETG"      : ( 1.27, 2.20 ),  # 1.70 - 2.20
        "PC+ABS"    : ( 1.15, 2.20 ),  # 1.50 - 2.20
        "ABS"       : ( 1.06, 2.40 ),  # 1.25 - 2.40
        "ASA"       : ( 1.07, 2.10 ),  # 1.30 - 2.10
        "PA6"       : ( 1.12, 2.50 ),  # 2.00 - 2.50
        "PA"        : ( 1.15, 2.50 ),  # 2.00 - 2.50
        "PC"        : ( 1.20, 1.90 ),  # 1.10 - 1.90
        "TPU"       : ( 1.21, 2.00 ),  # 1.50 - 2.00
        "TPU-90A"   : ( 1.15, 2.00 ),  # 1.50 - 2.00
        "TPU-95A"   : ( 1.22, 2.00 ),  # 1.50 - 2.00
        "ABS-CF"    : ( 1.11, 2.40 ),  # 1.25 - 2.40
        "ASA-CF"    : ( 1.11, 2.10 ),  # 1.30 - 2.10
        "PA6-CF"    : ( 1.19, 2.50 ),  # 2.00 - 2.50
        "PC+ABS-CF" : ( 1.22, 2.20 ),  # 1.50 - 2.20
        "PC+CF"     : ( 1.36, 1.90 ),  # 1.10 - 1.90
        "PLA-CF"    : ( 1.29, 2.20 ),  # 1.80 - 2.20
        "PETG-CF"   : ( 1.30, 2.20 ),  # 1.70 - 2.20
    }
gcode:
    {% set material = params.MATERIAL | upper %}
    {% set heater = params.HEATER | default('extruder') %}
    {% set extruder_config = printer.configfile.settings[heater] %}

    {% if material in filament_table %}
        {% set (density, heat_capacity) = filament_table[material] %}

        RESPOND PREFIX=ðŸ”¥ MSG="Configured {heater} MPC for {material}. Density: {density}, Heat Capacity: {heat_capacity}"
    {% else %}
        {% set density = extruder_config.filament_density %}
        {% set heat_capacity=extruder_config.filament_heat_capacity %}

        RESPOND PREFIX=ðŸ”¥ MSG="Unknown material '{material}', using default mpc parameters for {heater}"
    {% endif %}

    MPC_SET HEATER={heater} FILAMENT_DENSITY={density} FILAMENT_HEAT_CAPACITY={heat_capacity}
[gcode_macro DUMP_VARIABLES]
gcode:
    {% set filter_name = params.NAME|default('')|string|lower %}
    {% set filter_value = params.VALUE|default('')|string|lower %}
    {% set show_cfg = params.SHOW_CFG|default(0)|int %}
    
    {% set out = [] %}

    {% for key1 in printer %}
        {% for key2 in printer[key1] %}
            {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
            {% endif %}
        {% else %}
            {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    
    {action_respond_info(out|join("\n"))}

[gcode_macro PRINT_START]
gcode: 
    # Parameters
    {% set BED_TEMP = params.BED|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|float %}
    
    {% set CHAMBER_TEMP = params.CHAMBER|float %}
    {% set MATERIAL = params.MATERIAL|string %}

    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}

    G32                            ; home all axes
    G1 Z100 F3000                   ; move nozzle away from bed

    M190 S{BED_TEMP}            ; set and wait for bed to reach temp
    M109 S{EXTRUDER_TEMP}       ; set and wait for hot end to reach temp

[gcode_macro PRIME_LINE]
gcode:
    # Set vars
    {% set St = printer["gcode_macro _USER_VARIABLES_OTHER"].travel_speed * 60 %}
    {% set Sz = printer["gcode_macro _USER_VARIABLES_OTHER"].z_drop_speed * 60 %}
    {% set prime_line_x, prime_line_y = printer["gcode_macro _USER_VARIABLES_OTHER"].prime_line_xy|map('float') %}

    G91
    M83
    G1 Z5 F{Sz}

    ; Starting position
    G90
    G1 X{prime_line_x} Y{prime_line_y} F{St}
    G1 Z0.3 F{Sz|int / 2}

    ; Add pressure in the nozzle
    G92 E0
    G1 E18 F300

    ; Prime line
    G92 E0
    G1 Y{prime_line_y + 80} E10 F2500
    G92 E0
    G1 Y{prime_line_y + 130} E5 F1500

    ; Retract and Z-hop
    G92 E0
    G1 Z4.0 E-0.1 F{Sz}
    G92 E0
    G1 Z5 F{Sz}

